<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>记录成长</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.jiangdashuai.com/"/>
  <updated>2020-07-03T07:14:28.334Z</updated>
  <id>https://blog.jiangdashuai.com/</id>
  
  <author>
    <name>蒋大帅</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>node使用sharp修改图片中间原型头像</title>
    <link href="https://blog.jiangdashuai.com/2020/07/03/node%E4%BD%BF%E7%94%A8sharp%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E4%B8%AD%E9%97%B4%E5%8E%9F%E5%9E%8B%E5%A4%B4%E5%83%8F/"/>
    <id>https://blog.jiangdashuai.com/2020/07/03/node使用sharp修改图片中间原型头像/</id>
    <published>2020-07-03T07:07:55.000Z</published>
    <updated>2020-07-03T07:14:28.334Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;需要将网络上的图片，中间的头像更改为新图片，并且返回生成图片的文件流&lt;br&gt;
    
    </summary>
    
      <category term="node学习" scheme="https://blog.jiangdashuai.com/categories/node%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="node" scheme="https://blog.jiangdashuai.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>vscode安装golang插件失败问题</title>
    <link href="https://blog.jiangdashuai.com/2020/07/03/vscode%E5%AE%89%E8%A3%85golang%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.jiangdashuai.com/2020/07/03/vscode安装golang插件失败问题/</id>
    <published>2020-07-03T06:45:43.000Z</published>
    <updated>2020-07-03T06:57:55.481Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用vscode开发go，需要下载相应的插件，但是有一些插件是在国外的软件，通常有两种安装方式&lt;br&gt;
    
    </summary>
    
      <category term="go学习" scheme="https://blog.jiangdashuai.com/categories/go%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="go" scheme="https://blog.jiangdashuai.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>node测试时使用nodemon</title>
    <link href="https://blog.jiangdashuai.com/2020/06/27/node%E6%B5%8B%E8%AF%95%E6%97%B6%E4%BD%BF%E7%94%A8nodemon/"/>
    <id>https://blog.jiangdashuai.com/2020/06/27/node测试时使用nodemon/</id>
    <published>2020-06-27T14:18:14.000Z</published>
    <updated>2020-07-03T06:43:42.763Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在进行node进行开发过程中如果更改代码需要频繁重启可是使用nodemon来解决增加开发效率&lt;/p&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
      <category term="node" scheme="https://blog.jiangdashuai.com/categories/node/"/>
    
    
      <category term="node" scheme="https://blog.jiangdashuai.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>nodejs简单页面展示</title>
    <link href="https://blog.jiangdashuai.com/2020/06/27/nodejs%E7%AE%80%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%B1%95%E7%A4%BA/"/>
    <id>https://blog.jiangdashuai.com/2020/06/27/nodejs简单页面展示/</id>
    <published>2020-06-27T14:02:48.000Z</published>
    <updated>2020-07-03T07:14:24.376Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;制作简单的网页服务器&lt;br&gt;
    
    </summary>
    
      <category term="node学习" scheme="https://blog.jiangdashuai.com/categories/node%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="node" scheme="https://blog.jiangdashuai.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>docker修改镜像名称</title>
    <link href="https://blog.jiangdashuai.com/2020/06/27/docker%E4%BF%AE%E6%94%B9%E9%95%9C%E5%83%8F%E5%90%8D%E7%A7%B0/"/>
    <id>https://blog.jiangdashuai.com/2020/06/27/docker修改镜像名称/</id>
    <published>2020-06-27T11:21:15.000Z</published>
    <updated>2020-07-03T06:43:42.762Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="docker" scheme="https://blog.jiangdashuai.com/categories/docker/"/>
    
    
      <category term="docker" scheme="https://blog.jiangdashuai.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Window关闭端口</title>
    <link href="https://blog.jiangdashuai.com/2019/04/01/Window%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/"/>
    <id>https://blog.jiangdashuai.com/2019/04/01/Window关闭端口/</id>
    <published>2019-04-01T03:10:03.000Z</published>
    <updated>2020-07-03T06:43:42.762Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;查询端口占用进程号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -aon| findstr &amp;quot;8083&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境问题" scheme="https://blog.jiangdashuai.com/categories/%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="window" scheme="https://blog.jiangdashuai.com/tags/window/"/>
    
  </entry>
  
  <entry>
    <title>开发过程中单个字母命名造成错误</title>
    <link href="https://blog.jiangdashuai.com/2019/03/26/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%8D%95%E4%B8%AA%E5%AD%97%E6%AF%8D%E5%91%BD%E5%90%8D%E9%80%A0%E6%88%90%E9%94%99%E8%AF%AF/"/>
    <id>https://blog.jiangdashuai.com/2019/03/26/开发过程中单个字母命名造成错误/</id>
    <published>2019-03-26T14:22:10.000Z</published>
    <updated>2020-07-03T06:43:42.771Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开发过程中数据库中的字段名是e_calss_hours生成的类对应的字段为eCalssHours，IDE自动生成的&lt;br&gt;getter和setter方法就会是getECalssHours();这样就会导致获取字段数据的时候获取的为null，&lt;br&gt;
    
    </summary>
    
      <category term="开发问题" scheme="https://blog.jiangdashuai.com/categories/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="java" scheme="https://blog.jiangdashuai.com/tags/java/"/>
    
      <category term="开发" scheme="https://blog.jiangdashuai.com/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机参数</title>
    <link href="https://blog.jiangdashuai.com/2019/03/22/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%82%E6%95%B0/"/>
    <id>https://blog.jiangdashuai.com/2019/03/22/虚拟机参数/</id>
    <published>2019-03-22T15:38:38.000Z</published>
    <updated>2020-07-03T06:43:42.772Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;虚拟机参数&quot;&gt;&lt;a href=&quot;#虚拟机参数&quot; class=&quot;headerlink&quot; title=&quot;虚拟机参数&quot;&gt;&lt;/a&gt;虚拟机参数&lt;/h1&gt;&lt;h2 id=&quot;JVM参数规则&quot;&gt;&lt;a href=&quot;#JVM参数规则&quot; class=&quot;headerlink&quot; title=&quot;JVM参数规则&quot;&gt;&lt;/a&gt;JVM参数规则&lt;/h2&gt;&lt;p&gt;所有的JVM参数都是以 -XX：开头&lt;br&gt;-XX:+option ，表示开启option选项&lt;br&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>2.常量的本质含义与反编译介绍</title>
    <link href="https://blog.jiangdashuai.com/2019/03/22/%E5%B8%B8%E9%87%8F%E7%9A%84%E6%9C%AC%E8%B4%A8%E5%90%AB%E4%B9%89%E4%B8%8E%E5%8F%8D%E7%BC%96%E8%AF%91%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blog.jiangdashuai.com/2019/03/22/常量的本质含义与反编译介绍/</id>
    <published>2019-03-22T15:21:29.000Z</published>
    <updated>2020-07-03T06:43:42.770Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常量的本质含义与反编译介绍&quot;&gt;&lt;a href=&quot;#常量的本质含义与反编译介绍&quot; class=&quot;headerlink&quot; title=&quot;常量的本质含义与反编译介绍&quot;&gt;&lt;/a&gt;常量的本质含义与反编译介绍&lt;/h1&gt;&lt;h2 id=&quot;常量的本质&quot;&gt;&lt;a href=&quot;#常量的本质&quot; class=&quot;headerlink&quot; title=&quot;常量的本质&quot;&gt;&lt;/a&gt;常量的本质&lt;/h2&gt;&lt;p&gt;常量在编译阶段会存入到调用这个常量的方法所在类的常量池中，&lt;br&gt;本质上，调用类并没有引用到定义常量的类，因此并不会触发定义常量的类的初始化。&lt;br&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>助记符</title>
    <link href="https://blog.jiangdashuai.com/2019/03/22/%E5%8A%A9%E8%AE%B0%E7%AC%A6/"/>
    <id>https://blog.jiangdashuai.com/2019/03/22/助记符/</id>
    <published>2019-03-22T09:47:22.000Z</published>
    <updated>2020-07-03T06:43:42.770Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;助记符内容在 rt.jar 中，有相应的类&lt;/p&gt;
&lt;p&gt;&lt;code&gt;常见助记符：&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getstatic : 获取静态变量&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>JAVA程序对类的使用方式</title>
    <link href="https://blog.jiangdashuai.com/2019/03/18/JAVA%E7%A8%8B%E5%BA%8F%E5%AF%B9%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
    <id>https://blog.jiangdashuai.com/2019/03/18/JAVA程序对类的使用方式/</id>
    <published>2019-03-18T15:30:51.000Z</published>
    <updated>2020-07-03T06:43:42.744Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;java 程序对&lt;strong&gt;类&lt;/strong&gt;（&lt;code&gt;非对象&lt;/code&gt;）的使用方式分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主动使用（类的首次主动使用会导致类的初始化）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>JVM类的加载</title>
    <link href="https://blog.jiangdashuai.com/2019/03/18/JVM%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD/"/>
    <id>https://blog.jiangdashuai.com/2019/03/18/JVM类的加载/</id>
    <published>2019-03-18T15:05:45.000Z</published>
    <updated>2020-07-03T06:43:42.744Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在&lt;strong&gt;运行时数据区的方法区&lt;/strong&gt;内，然后再在内存中创建一个java.lang.Class对象（规范并未说明Class对象位于哪里，HotSpot虚拟机将其放在方法区中）用来封装类在方法区内的数据结构。&lt;br&gt;类不管生成多少个实例，它对应的Class对象只有唯一的一个，这里的Class对象就是唯一的那一个。&lt;br&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>类初始化介绍</title>
    <link href="https://blog.jiangdashuai.com/2019/03/18/%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blog.jiangdashuai.com/2019/03/18/类初始化介绍/</id>
    <published>2019-03-18T14:59:25.000Z</published>
    <updated>2020-07-03T06:43:42.771Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;所有的Java虚拟机实现必须在每个类或接口被Java程序 “&lt;a href=&quot;/2019/03/18/JAVA程序对类的使用方式/&quot;&gt;&lt;strong&gt;&lt;code&gt;首次主动使用&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;” 时才初始化他们&lt;br&gt;被动使用都不会导致类的初始化&lt;/p&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>jvm符号引用VS间接引用</title>
    <link href="https://blog.jiangdashuai.com/2019/03/18/%E7%AC%A6%E5%8F%B7%E5%BC%95%E7%94%A8VS%E9%97%B4%E6%8E%A5%E5%BC%95%E7%94%A8/"/>
    <id>https://blog.jiangdashuai.com/2019/03/18/符号引用VS间接引用/</id>
    <published>2019-03-18T14:45:55.000Z</published>
    <updated>2020-07-03T06:43:42.771Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;符号引用&lt;/strong&gt;就是指的字符串，这个字符串中包含足够的信息，用于在实际使用的时候找到相应的类的位置。比如说某个方法的符号引用，如：“java/io/PrintStream.println:(Ljava/lang/String;)V”。里面有类的信息，方法名，方法参数等信息。&lt;br&gt;
    
    </summary>
    
      <category term="JVM学习" scheme="https://blog.jiangdashuai.com/categories/JVM%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="jvm" scheme="https://blog.jiangdashuai.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>Microservices Resource Guide（未完成）</title>
    <link href="https://blog.jiangdashuai.com/2019/03/18/Microservices%20Resource%20Guide/"/>
    <id>https://blog.jiangdashuai.com/2019/03/18/Microservices Resource Guide/</id>
    <published>2019-03-18T14:15:32.000Z</published>
    <updated>2020-07-03T06:43:42.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;翻译文章：&lt;a href=&quot;https://martinfowler.com/microservices/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://martinfowler.com/microservices/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;微服务资源指南&quot;&gt;&lt;a href=&quot;#微服务资源指南&quot; class=&quot;headerlink&quot; title=&quot;微服务资源指南&quot;&gt;&lt;/a&gt;微服务资源指南&lt;/h1&gt;&lt;p&gt;“微服务”成为一个热门的术语是在 2014 年，作为结构化应用的一个新的思考方向吸引了大量的注意力。我在几年前遇到了这种风格，与我的朋友在 ThoughtWorks 内外进行了交流。许多优秀的开发者发现这种风格的服务要想有效的进行工作需要伴随着有着大量分类的系统。但是要想从微服务的思考中获益，你还必须知道，什么是微服务，怎样做，以及为什么要这么做。&lt;/p&gt;
    
    </summary>
    
      <category term="每日一译" scheme="https://blog.jiangdashuai.com/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AF%91/"/>
    
    
      <category term="微服务" scheme="https://blog.jiangdashuai.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>sping报错/tmp/tomcat.4296537502689403143.5000/work/Tomcat/localhost/ROOT</title>
    <link href="https://blog.jiangdashuai.com/2019/03/15/sping%E6%8A%A5%E9%94%99-tmp-tomcat-4296537502689403143-5000-work-Tomcat-localhost-ROOT/"/>
    <id>https://blog.jiangdashuai.com/2019/03/15/sping报错-tmp-tomcat-4296537502689403143-5000-work-Tomcat-localhost-ROOT/</id>
    <published>2019-03-15T03:15:31.000Z</published>
    <updated>2020-07-03T06:43:42.763Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参考&lt;a href=&quot;https://stackoverflow.com/questions/50523407/the-temporary-upload-location-tmp-tomcat-4296537502689403143-5000-work-tomcat&quot;
        
      
    
    </summary>
    
      <category term="（未完成）spring-boot问题" scheme="https://blog.jiangdashuai.com/categories/%EF%BC%88%E6%9C%AA%E5%AE%8C%E6%88%90%EF%BC%89spring-boot%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="sping-boot" scheme="https://blog.jiangdashuai.com/tags/sping-boot/"/>
    
  </entry>
  
  <entry>
    <title>Centos中Python2.x 升级3.x</title>
    <link href="https://blog.jiangdashuai.com/2019/03/11/Centos%E4%B8%ADPython2-x-%E5%8D%87%E7%BA%A73-x/"/>
    <id>https://blog.jiangdashuai.com/2019/03/11/Centos中Python2-x-升级3-x/</id>
    <published>2019-03-10T16:12:29.000Z</published>
    <updated>2020-07-03T06:43:42.743Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;查看当前 python 版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python -V&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="环境问题" scheme="https://blog.jiangdashuai.com/categories/%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="centos" scheme="https://blog.jiangdashuai.com/tags/centos/"/>
    
      <category term="python" scheme="https://blog.jiangdashuai.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Mac环境中在 PyCharm 中部署 Anaconda</title>
    <link href="https://blog.jiangdashuai.com/2019/03/10/Mac%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%9C%A8-Pycharm-%E4%B8%AD%E9%83%A8%E7%BD%B2-Anaconda/"/>
    <id>https://blog.jiangdashuai.com/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/</id>
    <published>2019-03-10T15:57:45.000Z</published>
    <updated>2020-07-03T06:43:42.750Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;mac中安装pycharm并通过Anaconda管理python包&lt;br&gt;
    
    </summary>
    
      <category term="环境问题" scheme="https://blog.jiangdashuai.com/categories/%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="MAC" scheme="https://blog.jiangdashuai.com/tags/MAC/"/>
    
      <category term="PyCharm" scheme="https://blog.jiangdashuai.com/tags/PyCharm/"/>
    
      <category term="Anaconda" scheme="https://blog.jiangdashuai.com/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm不能编辑</title>
    <link href="https://blog.jiangdashuai.com/2019/03/10/PyCharm%E4%B8%8D%E8%83%BD%E7%BC%96%E8%BE%91/"/>
    <id>https://blog.jiangdashuai.com/2019/03/10/PyCharm不能编辑/</id>
    <published>2019-03-10T15:55:33.000Z</published>
    <updated>2020-07-03T06:43:42.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;是因为安装的时候安装了 vim 扩展，会默认使用 vim 编辑器来进行编辑，需要手动关闭 Vim Emulator&lt;br&gt;
    
    </summary>
    
      <category term="环境问题" scheme="https://blog.jiangdashuai.com/categories/%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="MAC" scheme="https://blog.jiangdashuai.com/tags/MAC/"/>
    
      <category term="PyCharm" scheme="https://blog.jiangdashuai.com/tags/PyCharm/"/>
    
  </entry>
  
  <entry>
    <title>Mac 中添加 Docker 的国内镜像</title>
    <link href="https://blog.jiangdashuai.com/2019/03/10/Mac-%E4%B8%AD%E6%B7%BB%E5%8A%A0-Docker-%E7%9A%84%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
    <id>https://blog.jiangdashuai.com/2019/03/10/Mac-中添加-Docker-的国内镜像/</id>
    <published>2019-03-10T15:52:10.000Z</published>
    <updated>2020-07-03T06:43:42.744Z</updated>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;点击 Docker 设置&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="docker" scheme="https://blog.jiangdashuai.com/categories/docker/"/>
    
    
      <category term="docker" scheme="https://blog.jiangdashuai.com/tags/docker/"/>
    
      <category term="MAC" scheme="https://blog.jiangdashuai.com/tags/MAC/"/>
    
  </entry>
  
</feed>
