<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Centos中Python2.x 升级3.x</title>
      <link href="/2019/03/11/Centos%E4%B8%ADPython2-x-%E5%8D%87%E7%BA%A73-x/"/>
      <url>/2019/03/11/Centos%E4%B8%ADPython2-x-%E5%8D%87%E7%BA%A73-x/</url>
      
        <content type="html"><![CDATA[<ul><li>查看当前 python 版本</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python --version<br>python -V<br></code></pre></td></tr></table></figure><ul><li>下载最新的python版本</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://www.python.org/ftp/python/3.5.2/Python-3.x.x.tgz<br></code></pre></td></tr></table></figure><ul><li>解压</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf Python-3.7.2.tgz<br></code></pre></td></tr></table></figure><ul><li>进入解压的 python 文件夹</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> Python-3.5.2/<br> ./configure<br></code></pre></td></tr></table></figure><ul><li>可能会报错</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">configure: error: no acceptable C compiler found <span class="hljs-keyword">in</span> <span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><ul><li>报错是由于 linux 没有合适的编译器，安装编译器即可( yum 如果有问题可以参考 <a href="/2019/03/10/最小化-Centos7-安装没有-ifconfig命令，以及更新-yum/">yum更新</a> )</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install make gcc gcc-c++<br></code></pre></td></tr></table></figure><ul><li>然后再执行</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure<br></code></pre></td></tr></table></figure><ul><li>编译(时间较长)</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make  install<br></code></pre></td></tr></table></figure><ul><li>这个时候查看 python 版本的还是2.x 访问 python3 的版本是3.x; 查看 python 的链接情况</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"> ls -al /usr/bin | grep python<br>-rwxr-xr-x.  1 root root      11216 12月  1 2015 abrt-action-analyze-python<br>lrwxrwxrwx.  1 root root          7 8月  30 12:11 python -&gt; python2<br>lrwxrwxrwx.  1 root root          9 8月  30 12:11 python2 -&gt; python2.7<br>-rwxr-xr-x.  1 root root       7136 11月 20 2015 python2.7<br></code></pre></td></tr></table></figure><ul><li>将原来的 python 的软链接重命名</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mv /usr/bin/python /usr/bin/python.bak<br></code></pre></td></tr></table></figure><ul><li>将 python 链接至 python3</li></ul><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ln -s /usr/<span class="hljs-built_in">local</span>/bin/python3 /usr/bin/python<br></code></pre></td></tr></table></figure><p>变为<br><img src="/2019/03/11/Centos中Python2-x-升级3-x/img/f6a97143f25a4971157854be5a0e310.png" alt="f6a97143f25a4971157854be5a0e310.png"></p><ul><li>查看 python 发现已经是3.x的版本</li></ul><p>最后会发现 yum 不能使用，由于 yum 引用了 python 需要将 yum 的配置更改</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /usr/bin/yum<br>vi /usr/libexec/urlgrabber-ext-down<br></code></pre></td></tr></table></figure><p>将 <em>#!/usr/bin/python 改为 #!/usr/bin/python2.7</em> 就好了</p><p>本文参考：<br> <a href="https://blog.csdn.net/liang19890820/article/details/51079633" target="_blank" rel="noopener">https://blog.csdn.net/liang19890820/article/details/51079633</a></p>]]></content>
      
      
      <categories>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac环境中在 Pycharm 中部署 Anaconda</title>
      <link href="/2019/03/10/Mac%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%9C%A8-Pycharm-%E4%B8%AD%E9%83%A8%E7%BD%B2-Anaconda/"/>
      <url>/2019/03/10/Mac%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%9C%A8-Pycharm-%E4%B8%AD%E9%83%A8%E7%BD%B2-Anaconda/</url>
      
        <content type="html"><![CDATA[<p>1.Pycharm-&gt;Preferences<img src="/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/img/进入属性.png" alt="进入属性"><br>2.Project:项目名-&gt;Project Interpreter-&gt;点击右上角的齿轮<img src="/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/img/Project Interpreter.png" alt="Project Interpreter"><br>3.点击齿轮-&gt;Add<img src="/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/img/添加环境.png" alt="添加环境"><br>4.选择System Interpreter-&gt;选择…<img src="/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/img/System Interpreter.png" alt="选择System Interpreter"><br>5.选择 Anaconda路径中的 python 确定<img src="/2019/03/10/Mac环境中在-Pycharm-中部署-Anaconda/img/选择python环境.png" alt="选择python环境"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MAC </tag>
            
            <tag> Pycharm </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm不能编辑</title>
      <link href="/2019/03/10/PyCharm%E4%B8%8D%E8%83%BD%E7%BC%96%E8%BE%91/"/>
      <url>/2019/03/10/PyCharm%E4%B8%8D%E8%83%BD%E7%BC%96%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<p>是因为安装的时候安装了vim扩展，会默认使用vim编辑器来进行编辑，需要手动关闭Vim Emulator<br><code>Tools -&gt; Vim Emulator</code><br><img src="/img/img.png" alt="修改图片"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MAC </tag>
            
            <tag> PyCharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 中添加 Docker 的国内镜像</title>
      <link href="/2019/03/10/Mac-%E4%B8%AD%E6%B7%BB%E5%8A%A0-Docker-%E7%9A%84%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
      <url>/2019/03/10/Mac-%E4%B8%AD%E6%B7%BB%E5%8A%A0-Docker-%E7%9A%84%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<ol><li>点击 Docker 设置<br><img src="/2019/03/10/Mac-中添加-Docker-的国内镜像/img/Docker.png" alt="Docker"></li><li>Preferences-&gt;Daemon<br><img src="/2019/03/10/Mac-中添加-Docker-的国内镜像/img/添加样式.png" alt="添加样式"></li></ol><p><strong>注：</strong><br>添加过程中如果出现 No certs for xxx.mirror.aliyuncs.com，可以将 Registry mirrors中的https改为http，然后Apply &amp; Restart就没有这个报错了<br> <img src="/2019/03/10/Mac-中添加-Docker-的国内镜像/img/no certs error.png" alt="no certs error"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> MAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot 连接数据库报错（useSSl）</title>
      <link href="/2019/03/10/springboot-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/03/10/springboot-%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">WARN: Establishing SSL connection without server<span class="hljs-string">'s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn'</span>t <span class="hljs-built_in">set</span>. For compliance with existing applications not using SSL the verifyServerCertificate property is <span class="hljs-built_in">set</span> to <span class="hljs-string">'false'</span>. You need either to explicitly <span class="hljs-built_in">disable</span> SSL by setting useSSL=<span class="hljs-literal">false</span>, or <span class="hljs-built_in">set</span> useSSL=<span class="hljs-literal">true</span> and provide truststore <span class="hljs-keyword">for</span> server certificate verification.<br></code></pre></td></tr></table></figure><p>由于使用 ssl 连接，但是没配置 ssl 信息；如果不用 ssl 连接可以在连接中增加</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jdbc.url=jdbc:mysql://localhost:3306/esps?useSSL=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring 中获取时间相差八个小时解决</title>
      <link href="/2019/03/10/Spring-%E4%B8%AD%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E7%9B%B8%E5%B7%AE%E5%85%AB%E4%B8%AA%E5%B0%8F%E6%97%B6%E8%A7%A3%E5%86%B3/"/>
      <url>/2019/03/10/Spring-%E4%B8%AD%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E7%9B%B8%E5%B7%AE%E5%85%AB%E4%B8%AA%E5%B0%8F%E6%97%B6%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="获取时间与真实时间相差八小时问题"><a href="#获取时间与真实时间相差八小时问题" class="headerlink" title="获取时间与真实时间相差八小时问题"></a>获取时间与真实时间相差八小时问题</h1><h2 id="问题1："><a href="#问题1：" class="headerlink" title="问题1："></a>问题1：</h2><p>spring时间<strong>格式化转换</strong>之后与当前时间相差八个小时</p><h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><p>spring 默认使用 jackson转换日期， jackson默认时区与北京时间相差八个小时</p><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><p>在项目的配置文件 <em>application.properties</em> 加上下面配置</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">spring.jackson.time-zone=GMT+8<br></code></pre></td></tr></table></figure><p>==============================================</p><h2 id="问题2："><a href="#问题2：" class="headerlink" title="问题2："></a>问题2：</h2><p>数据库获取时间与当前时间相差八个小时（使用的持久层框架为 spring-boot-jpa ）</p><h3 id="原因2："><a href="#原因2：" class="headerlink" title="原因2："></a>原因2：</h3><p>数据库获取的时间与北京时区存在差异</p><h3 id="解决方式2"><a href="#解决方式2" class="headerlink" title="解决方式2"></a>解决方式2</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">spring.datasource.url=jdbc:mysql://IP:3306/database?useUnicode=<span class="hljs-literal">true</span>&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2b8<br></code></pre></td></tr></table></figure><p><em>注：<br> 建议将两种方式都应用到项目中，以防万一</em></p>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-boot-jpa使用IDEA生成实体类</title>
      <link href="/2019/03/10/spring-boot-jpa%E4%BD%BF%E7%94%A8IDEA%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB/"/>
      <url>/2019/03/10/spring-boot-jpa%E4%BD%BF%E7%94%A8IDEA%E7%94%9F%E6%88%90%E5%AE%9E%E4%BD%93%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<ol><li>View-&gt;Tool Windows-&gt;DataBase添加数据库</li><li>File-&gt;Project Structure如果没有点击加号加上model <img src="/2019/03/10/spring-boot-jpa使用IDEA生成实体类/img/Project Structure图片.png" alt="Project Structure图片"></li><li>添加完成后就会出现Persistence窗口(只有执行第二步之后才会出现)<img src="/2019/03/10/spring-boot-jpa使用IDEA生成实体类/img/Persistence位置.png" alt="Persistence位置.png"></li><li>在 Persistence窗口 右键选择-&gt;Generate Persistence Mapping-&gt;选择By Database Schemas<img src="/2019/03/10/spring-boot-jpa使用IDEA生成实体类/img/Database Schemas.png" alt="Database Schemas"></li><li>选择第4步的 By Database Schema之后就会出现下面的样式选择相应的数据库表、设置表中字段与实体类的对应关系类型、以及生成的实体类所在包的位置，点击确定后就会在相应的位置生成文件<img src="/2019/03/10/spring-boot-jpa使用IDEA生成实体类/img/选择数据文件.png" alt="选择数据文件"></li></ol>]]></content>
      
      
      <categories>
          
          <category> spring-boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> spring-boot-jpa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker设置内部时间为东八区</title>
      <link href="/2019/03/10/Docker%E8%AE%BE%E7%BD%AE%E5%86%85%E9%83%A8%E6%97%B6%E9%97%B4%E4%B8%BA%E4%B8%9C%E5%85%AB%E5%8C%BA/"/>
      <url>/2019/03/10/Docker%E8%AE%BE%E7%BD%AE%E5%86%85%E9%83%A8%E6%97%B6%E9%97%B4%E4%B8%BA%E4%B8%9C%E5%85%AB%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<p>在 Dockerfile 或者 Docker Compose 中加入</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \<br>    &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">'Asia/Shanghai'</span> &gt;/etc/timezone<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最小化 Centos7 安装没有 ifconfig命令，以及更新 yum</title>
      <link href="/2019/03/10/%E6%9C%80%E5%B0%8F%E5%8C%96-Centos7-%E5%AE%89%E8%A3%85%E6%B2%A1%E6%9C%89-ifconfig%E5%91%BD%E4%BB%A4%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%9B%B4%E6%96%B0-yum/"/>
      <url>/2019/03/10/%E6%9C%80%E5%B0%8F%E5%8C%96-Centos7-%E5%AE%89%E8%A3%85%E6%B2%A1%E6%9C%89-ifconfig%E5%91%BD%E4%BB%A4%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%9B%B4%E6%96%B0-yum/</url>
      
        <content type="html"><![CDATA[<p>安装 net 工具</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install net-tools<br></code></pre></td></tr></table></figure><p>安装过程中可能会报 yum 异常，可以更改 yum 源<br>可以参考163的源网站 <a href="http://mirrors.163.com/.help/centos.html" target="_blank" rel="noopener">http://mirrors.163.com/.help/centos.html</a></p><p>1.备份</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br></code></pre></td></tr></table></figure><p>2.下载相应镜像到指定目录中</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/yum.repos.d/<br>wget http://mirrors.163.com/.<span class="hljs-built_in">help</span>/CentOS7-Base-163.repo<br></code></pre></td></tr></table></figure><p>3.生成缓存</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum clean all<br>yum makecache<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.类加载过程简单介绍</title>
      <link href="/2019/03/10/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2019/03/10/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="类加载的过程"><a href="#类加载的过程" class="headerlink" title="类加载的过程"></a>类加载的过程</h1><pre><code>1. **加载**： 查找并加载类的二进制文件2. **连接**：    * 验证    * 准备    * 解析3.**初始化**4.使用5.卸载</code></pre>]]></content>
      
      
      <categories>
          
          <category> 未完成 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/03/10/hello-world/"/>
      <url>/2019/03/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/README.html"/>
      <url>/README.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客"><a href="#hexo博客" class="headerlink" title="hexo博客"></a>hexo博客</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
